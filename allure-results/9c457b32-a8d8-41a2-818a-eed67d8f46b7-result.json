{"name": "Проверка кнопки конструктора", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=128.0.6613.138)\nStacktrace:\n0   chromedriver                        0x0000000104ad5208 cxxbridge1$str$ptr + 1927396\n1   chromedriver                        0x0000000104acd66c cxxbridge1$str$ptr + 1895752\n2   chromedriver                        0x00000001046c8808 cxxbridge1$string$len + 89564\n3   chromedriver                        0x00000001046a3b0c core::str::slice_error_fail::h6c488016ada29016 + 3776\n4   chromedriver                        0x00000001047334d8 cxxbridge1$string$len + 527020\n5   chromedriver                        0x0000000104745c90 cxxbridge1$string$len + 602724\n6   chromedriver                        0x0000000104701698 cxxbridge1$string$len + 322668\n7   chromedriver                        0x0000000104702310 cxxbridge1$string$len + 325860\n8   chromedriver                        0x0000000104a9be78 cxxbridge1$str$ptr + 1693012\n9   chromedriver                        0x0000000104aa077c cxxbridge1$str$ptr + 1711704\n10  chromedriver                        0x0000000104a813ec cxxbridge1$str$ptr + 1583816\n11  chromedriver                        0x0000000104aa104c cxxbridge1$str$ptr + 1713960\n12  chromedriver                        0x0000000104a71fc8 cxxbridge1$str$ptr + 1521316\n13  chromedriver                        0x0000000104abeb68 cxxbridge1$str$ptr + 1835588\n14  chromedriver                        0x0000000104abece4 cxxbridge1$str$ptr + 1835968\n15  chromedriver                        0x0000000104acd308 cxxbridge1$str$ptr + 1894884\n16  libsystem_pthread.dylib             0x000000018b8af2e4 _pthread_start + 136\n17  libsystem_pthread.dylib             0x000000018b8aa0fc thread_start + 8", "trace": "self = <tests.test_main_functions.TestMainFunctions object at 0x10418d9a0>\n\n    @allure.title(\"Проверка кнопки конструктора\")\n    @pytest.mark.usefixtures(\"driver\")\n    def test_button_construction(self):\n        self.driver.get(lenta_url)\n        client = MainPage(self.driver)\n>       client.check_button_constructor()\n\ntests/test_main_functions.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/main_page.py:29: in check_button_constructor\n    self.click_virt_mouse(self.button_costructor)\npages/base_page.py:50: in click_virt_mouse\n    WebDriverWait(self.driver, 5).until(EC.element_to_be_clickable(element))\nvenv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:96: in until\n    value = method(self._driver)\nvenv/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py:363: in _predicate\n    target = driver.find_element(*target)  # grab element at locator\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:748: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x10428d0a0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...00018b8af2e4 _pthread_start + 136\\\\n17  libsystem_pthread.dylib             0x000000018b8aa0fc thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=128.0.6613.138)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104ad5208 cxxbridge1$str$ptr + 1927396\nE       1   chromedriver                        0x0000000104acd66c cxxbridge1$str$ptr + 1895752\nE       2   chromedriver                        0x00000001046c8808 cxxbridge1$string$len + 89564\nE       3   chromedriver                        0x00000001046a3b0c core::str::slice_error_fail::h6c488016ada29016 + 3776\nE       4   chromedriver                        0x00000001047334d8 cxxbridge1$string$len + 527020\nE       5   chromedriver                        0x0000000104745c90 cxxbridge1$string$len + 602724\nE       6   chromedriver                        0x0000000104701698 cxxbridge1$string$len + 322668\nE       7   chromedriver                        0x0000000104702310 cxxbridge1$string$len + 325860\nE       8   chromedriver                        0x0000000104a9be78 cxxbridge1$str$ptr + 1693012\nE       9   chromedriver                        0x0000000104aa077c cxxbridge1$str$ptr + 1711704\nE       10  chromedriver                        0x0000000104a813ec cxxbridge1$str$ptr + 1583816\nE       11  chromedriver                        0x0000000104aa104c cxxbridge1$str$ptr + 1713960\nE       12  chromedriver                        0x0000000104a71fc8 cxxbridge1$str$ptr + 1521316\nE       13  chromedriver                        0x0000000104abeb68 cxxbridge1$str$ptr + 1835588\nE       14  chromedriver                        0x0000000104abece4 cxxbridge1$str$ptr + 1835968\nE       15  chromedriver                        0x0000000104acd308 cxxbridge1$str$ptr + 1894884\nE       16  libsystem_pthread.dylib             0x000000018b8af2e4 _pthread_start + 136\nE       17  libsystem_pthread.dylib             0x000000018b8aa0fc thread_start + 8\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchWindowException"}, "steps": [{"name": "Проверка кнопки конструктор", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=128.0.6613.138)\nStacktrace:\n0   chromedriver                        0x0000000104ad5208 cxxbridge1$str$ptr + 1927396\n1   chromedriver                        0x0000000104acd66c cxxbridge1$str$ptr + 1895752\n2   chromedriver                        0x00000001046c8808 cxxbridge1$string$len + 89564\n3   chromedriver                        0x00000001046a3b0c core::str::slice_error_fail::h6c488016ada29016 + 3776\n4   chromedriver                        0x00000001047334d8 cxxbridge1$string$len + 527020\n5   chromedriver                        0x0000000104745c90 cxxbridge1$string$len + 602724\n6   chromedriver                        0x0000000104701698 cxxbridge1$string$len + 322668\n7   chromedriver                        0x0000000104702310 cxxbridge1$string$len + 325860\n8   chromedriver                        0x0000000104a9be78 cxxbridge1$str$ptr + 1693012\n9   chromedriver                        0x0000000104aa077c cxxbridge1$str$ptr + 1711704\n10  chromedriver                        0x0000000104a813ec cxxbridge1$str$ptr + 1583816\n11  chromedriver                        0x0000000104aa104c cxxbridge1$str$ptr + 1713960\n12  chromedriver                        0x0000000104a71fc8 cxxbridge1$str$ptr + 1521316\n13  chromedriver                        0x0000000104abeb68 cxxbridge1$str$ptr + 1835588\n14  chromedriver                        0x0000000104abece4 cxxbridge1$str$ptr + 1835968\n15  chromedriver                        0x0000000104acd308 cxxbridge1$str$ptr + 1894884\n16  libsystem_pthread.dylib             0x000000018b8af2e4 _pthread_start + 136\n17  libsystem_pthread.dylib             0x000000018b8aa0fc thread_start + 8\n\n", "trace": "  File \"/Users/ulabualskaa/Documents/GitHub/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/ulabualskaa/Documents/GitHub/Diplom_3/pages/main_page.py\", line 29, in check_button_constructor\n    self.click_virt_mouse(self.button_costructor)\n  File \"/Users/ulabualskaa/Documents/GitHub/Diplom_3/pages/base_page.py\", line 50, in click_virt_mouse\n    WebDriverWait(self.driver, 5).until(EC.element_to_be_clickable(element))\n  File \"/Users/ulabualskaa/Documents/GitHub/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py\", line 96, in until\n    value = method(self._driver)\n            ^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/ulabualskaa/Documents/GitHub/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/support/expected_conditions.py\", line 363, in _predicate\n    target = driver.find_element(*target)  # grab element at locator\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/ulabualskaa/Documents/GitHub/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 748, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/ulabualskaa/Documents/GitHub/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/ulabualskaa/Documents/GitHub/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1727003938407, "stop": 1727003938407}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1727003928738, "stop": 1727003938408, "uuid": "8f7c7423-4cc6-426b-a24a-389f78435f05", "historyId": "958c099ff81ac75cfae52e45f91471b5", "testCaseId": "921b70d037724034c19d981cc2b58132", "fullName": "tests.test_main_functions.TestMainFunctions#test_button_construction", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_functions"}, {"name": "subSuite", "value": "TestMainFunctions"}, {"name": "host", "value": "MacBook-Pro-Ula.local"}, {"name": "thread", "value": "8096-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_functions"}]}